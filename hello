import static org.mockito.Mockito.*;
import org.junit.jupiter.api.Test;
import org.mockito.MockedStatic;

import java.util.List;

class ClientOnboardingServiceTest {

    @Test
    void testStaticCalls_NoOrganizationsFound() {
        // Arrange
        BaseResponse response = mock(BaseResponse.class);
        List<String> errors = List.of("some-error");
        String userEmail = "test@alight.com";

        try (MockedStatic<ErrorLogEventHelper> mockedErrorLog = mockStatic(ErrorLogEventHelper.class);
             MockedStatic<StartAnywhereUtil> mockedStartAnywhereUtil = mockStatic(StartAnywhereUtil.class)) {

            // Stub buildResponse so it doesn't return null
            mockedStartAnywhereUtil.when(() -> StartAnywhereUtil.buildResponse(
                    any(BaseResponse.class),
                    anyString(),
                    anyString(),
                    anyString(),
                    anyString(),
                    anyString(),
                    anyString(),
                    anyList()
            )).thenReturn(response);

            // --- Act: directly call the static methods like your code would ---
            ErrorLogEventHelper.logErrorEvent(
                    this.getClass().getName(),
                    "No organizations found for user",
                    "",
                    null,
                    ErrorLogEvent.ERROR_SEVERITY
            );

            StartAnywhereUtil.buildResponse(
                    response,
                    StartAnyWhereConstants.HTTP_STATUS_SUCCESS,
                    StartAnyWhereConstants.DELETE_STATUS,
                    StartAnyWhereConstants.SAV018,
                    StartAnyWhereConstants.SAV018_MSG,
                    StartAnyWhereConstants.LOW,
                    userEmail,
                    errors
            );

            // --- Assert: verify both static methods were called with expected args ---
            mockedErrorLog.verify(() -> ErrorLogEventHelper.logErrorEvent(
                    eq(ClientOnboardingServiceTest.class.getName()), // test class name here
                    eq("No organizations found for user"),
                    eq(""),
                    isNull(),
                    eq(ErrorLogEvent.ERROR_SEVERITY)
            ));

            mockedStartAnywhereUtil.verify(() -> StartAnywhereUtil.buildResponse(
                    eq(response),
                    eq(StartAnyWhereConstants.HTTP_STATUS_SUCCESS),
                    eq(StartAnyWhereConstants.DELETE_STATUS),
                    eq(StartAnyWhereConstants.SAV018),
                    eq(StartAnyWhereConstants.SAV018_MSG),
                    eq(StartAnyWhereConstants.LOW),
                    eq(userEmail),
                    eq(errors)
            ));
        }
    }
}
