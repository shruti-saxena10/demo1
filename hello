import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Assertions.*;

import java.util.Map;

import org.json.simple.JSONObject;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Spy;
import org.mockito.MockitoAnnotations;

import com.alight.cc.startanywhere.model.CreateGroupsResponse.FailedEntitlement;

class AsyncGroupServiceImplTest {

    @Spy
    @InjectMocks
    private AsyncGroupServiceImpl asyncGroupService;

    @BeforeEach
    void setUp() {
        MockitoAnnotations.openMocks(this);
    }

    @Test
    void testFailedEntitlementMapping() throws Exception {
        // Mock JSON response
        JSONObject jsonObject = new JSONObject();
        jsonObject.put("msg", "Some error occurred");
        jsonObject.put("errorCode", "ERR123");

        // Mock validFields map
        Map<String, String> validFields = Map.of("description", "TestEntitlement");

        // Spy getPresentValues to return a predefined map
        doReturn(Map.of("msg", "Some error occurred", "errorCode", "ERR123"))
                .when(asyncGroupService).getPresentValues(jsonObject);

        // Simulate block
        FailedEntitlement failedEntitlement = new FailedEntitlement();
        Map<String, String> presentValues = asyncGroupService.getPresentValues(jsonObject);
        failedEntitlement.setEntitlementName(validFields.get("description"));
        failedEntitlement.setErrorMessage(presentValues.get("msg"));
        failedEntitlement.setErrorCode(presentValues.get("errorCode"));

        // Assertions
        assertEquals("TestEntitlement", failedEntitlement.getEntitlementName());
        assertEquals("Some error occurred", failedEntitlement.getErrorMessage());
        assertEquals("ERR123", failedEntitlement.getErrorCode());
    }
}
